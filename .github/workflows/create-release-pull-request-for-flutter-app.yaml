name: Create release pull request for Flutter app

on:
  workflow_call:
    inputs:
      version:
        description: |
          Release version (e.g., 1.0.0)
          If not specified, only the build number is incremented.
        required: false
        type: string
      working-directory:
        description: "For mono-repo, specify the directory."
        default: "./"
        type: string
    secrets:
      app-id:
        description: | 
          "GitHub App ID."
          "Required because Actions will not run on the pull request you create if you do not use the GitHub App."
        required: true
      private-key:
        description: |
          "GitHub App private key."
          "Required because Actions will not run on the pull request you create if you do not use the GitHub App."
        required: true

jobs:
  set-version-and-branch:
    name: Set version and branch name
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-output.outputs.version }}
      build-number: ${{ steps.set-output.outputs.build-number }}
      branch: ${{ steps.set-output.outputs.branch }}
    steps:
      - uses: actions/checkout@v3

      - name: Retrieve pubspec metadata
        id: pubspec
        uses: altive/pubspec-metadata@v1
        with:
          pubspec-file: "${{ inputs.working-directory }}/pubspec.yaml"

      - name: Set input version to GITHUB_ENV
        if: ${{ inputs.version }}
        run: |
          echo "version=${{ inputs.version }}" >> "$GITHUB_ENV"

      - name: Set current version to GITHUB_ENV
        if: ${{ !inputs.version }}
        run: |
          echo "version=${{ steps.pubspec.outputs.version-number }}" >> "$GITHUB_ENV"

      - name: Set branch name to GITHUB_OUTPUT
        run: |
          b="release/${{ env.version }}"
          echo "branch=${b}" >> "$GITHUB_ENV"

      - name: Set version and branch to GITHUB_OUTPUT
        id: set-output
        run: |
          {
            echo "version=${{ env.version }}"
            echo "build-number=$((${{ steps.pubspec.outputs.build-number }} + 1))"
            echo "branch=${{ env.branch }}"
          } >> "$GITHUB_OUTPUT"

  create-branch:
    name: Create release branch
    runs-on: ubuntu-latest
    needs: [set-version-and-branch]
    steps:
      - uses: actions/checkout@v3

      - name: Set branch name to GITHUB_ENV
        run: |
          echo "branch=${{ needs.set-version-and-branch.outputs.branch }}" >> "$GITHUB_ENV"

      - name: Set whether the branch is already existing to GITHUB_ENV
        run: |
          exists=$(
            git fetch origin ${{ env.branch }} &&
            echo true ||
            echo false
          )
          echo "branch_exists=${exists}" >> "$GITHUB_ENV"

      - name: Create release branch
        if: env.branch_exists == 'false'
        run: |
          git switch -c ${{ env.branch }}
          git push origin ${{ env.branch }}

  bump-version:
    name: Bump version and build number
    runs-on: ubuntu-latest
    needs: [set-version-and-branch, create-branch]
    env:
      version: ${{ needs.set-version-and-branch.outputs.version }}
      build-number: ${{ needs.set-version-and-branch.outputs.build-number }}
      branch: ${{ needs.set-version-and-branch.outputs.branch }}
    steps:
      - uses: actions/checkout@v3

      - name: Switch branch
        run: |
          git fetch origin ${{ env.branch }}
          git switch ${{ env.branch }}

      - name: Bump version and build number
        run: |
          sed -i "s/^version:.*$/version:\ ${{ env.version }}\+${{ env.build-number }}/" ./pubspec.yaml
        working-directory: ${{ inputs.working-directory }}

      - name: Check diff
        run: |
          diff_count=$(git diff | wc -l)
          if [ "$diff_count" -ne 0 ]; then
              echo "has-diff=true" >> "$GITHUB_ENV"
          else
              echo "has-diff=false" >> "$GITHUB_ENV"
          fi

      - name: Git config
        if: env.has-diff == 'true'
        run: |
          git remote set-url origin "https://github-actions:${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}"
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Commit & Push
        if: env.has-diff == 'true'
        run: |
          git add .
          git commit -m "build: bump app to ${{ env.version }}+${{ env.build-number }}"
          git push origin ${{ env.branch }}

  create-pr:
    name: Create Pull-Request for release
    runs-on: ubuntu-latest
    needs: [set-version-and-branch, bump-version]
    permissions:
      contents: write
      pull-requests: write
    env: 
      branch: ${{ needs.set-version-and-branch.outputs.branch }}
      version: ${{ needs.set-version-and-branch.outputs.version }}
      build-number: ${{ needs.set-version-and-branch.outputs.build-number }}
    steps:
      - uses: actions/checkout@v3

      - name: Generate GiHub App token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.app-id }}
          private_key: ${{ secrets.private-key }}

      - name: Create release PR
        env:
          GITHUB_TOKEN: steps.generate_token.outputs.token
          title: "build: bump app to ${{ env.version }}+${{ env.build-number }}"
        run: gh pr create -B "$GITHUB_REF" -H "${{ env.branch }}" -t "${{ env.title }}" -b "" -a "$GITHUB_ACTOR"

      - name: Revoke GitHub Apps token
        if: steps.generate_token.conclusion == 'success'
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          curl --location --silent --request DELETE \
            --url "${GITHUB_API_URL}/installation/token" \
            --header "Accept: application/vnd.github+json" \
            --header "X-GitHub-Api-Version: 2022-11-28" \
            --header "Authorization: Bearer ${GITHUB_TOKEN}"
